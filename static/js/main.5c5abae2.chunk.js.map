{"version":3,"sources":["index.js"],"names":["fast","tension","friction","slow","mass","trans","x","y","concat","Goo","_useSpring","useSpring","pos1","config","_useSpring2","Object","_tmp_deploys_5qium_ckrq60gtb06ll0us88nk10pqj_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","set","_useSpring3","pos2","_useSpring5","pos3","useEffect","handler","_ref","clientX","clientY","window","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","style","position","width","height","id","in","result","stdDeviation","values","class","react_spring__WEBPACK_IMPORTED_MODULE_3__","div","transform","interpolate","ReactDOM","render","document","getElementById"],"mappings":"4NAKMA,SAAO,CAAEC,QAAS,KAAMC,SAAU,KAClCC,EAAO,CAAEC,KAAM,GAAIH,QAAS,IAAKC,SAAU,IAC3CG,EAAQ,SAACC,EAAGC,GAAJ,qBAAAC,OAAyBF,EAAzB,OAAAE,OAAgCD,EAAhC,mCAEC,SAASE,IAAM,IAAAC,EAKJC,YAAU,CAAEC,KAAM,CAAC,EAAG,GAAIC,OAAQb,IAL9Bc,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAKnBE,EALmBE,EAAA,GAKnBF,KAAQK,EALWH,EAAA,GAAAI,EAMTP,YAAU,CAAEQ,KAAMP,EAAMC,OAAQV,IAA1CgB,EANmBJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,MAMnBC,KANmBC,EAOTT,YAAU,CAAEU,KAAMF,EAAMN,OAAQV,IAA1CkB,EAPmBN,OAAAC,EAAA,EAAAD,CAAAK,EAAA,MAOnBC,KAaT,OAXAC,oBAAU,WAIR,IAAMC,EAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,QAAZ,OAA0BT,EAAI,CAAEL,KAAM,CAACa,EAASC,MAEhE,OADAC,OAAOC,iBAAiB,YAAaL,GAC9B,kBAAMI,OAAOE,oBAAoB,YAAaN,KACpD,IAKDO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEC,SAAU,WAAYC,MAAO,EAAGC,OAAQ,IACpDP,EAAAC,EAAAC,cAAA,UAAQM,GAAG,OACTR,EAAAC,EAAAC,cAAA,kBAAgBO,GAAG,gBAAgBC,OAAO,OAAOC,aAAa,OAC9DX,EAAAC,EAAAC,cAAA,iBAAeO,GAAG,OAAOG,OAAO,gDAGpCZ,EAAAC,EAAAC,cAAA,OAAKW,MAAM,cACTb,EAAAC,EAAAC,cAAA,OAAKW,MAAM,gBACTb,EAAAC,EAAAC,cAACY,EAAA,EAAKC,IAAN,CAAUF,MAAM,KAAKT,MAAO,CAAEY,UAAWzB,EAAK0B,YAAY1C,MAC1DyB,EAAAC,EAAAC,cAACY,EAAA,EAAKC,IAAN,CAAUF,MAAM,KAAKT,MAAO,CAAEY,UAAW3B,EAAK4B,YAAY1C,MAC1DyB,EAAAC,EAAAC,cAACY,EAAA,EAAKC,IAAN,CAAUF,MAAM,KAAKT,MAAO,CAAEY,UAAWlC,EAAKmC,YAAY1C,SAOpE2C,IAASC,OAAOnB,EAAAC,EAAAC,cAACvB,EAAD,MAASyC,SAASC,eAAe","file":"static/js/main.5c5abae2.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { useSpring, animated as anim } from 'react-spring'\nimport './styles.css'\n\nconst fast = { tension: 1200, friction: 40 }\nconst slow = { mass: 10, tension: 200, friction: 50 }\nconst trans = (x, y) => `translate3d(${x}px,${y}px,0) translate3d(-50%,-50%,0)`\n\nexport default function Goo() {\n  // Here we form a natural trail, one spring following another.\n  // You can either update springs by overwriting values when you re-render the component.\n  // Or you can use the set function, which allows you to bypass React alltogether.\n  // We're dealing with mouse-input here so we choose the latter in order to prevent rendering.\n  const [{ pos1 }, set] = useSpring({ pos1: [0, 0], config: fast })\n  const [{ pos2 }] = useSpring({ pos2: pos1, config: slow })\n  const [{ pos3 }] = useSpring({ pos3: pos2, config: slow })\n  // Effect for fetching mouse coordinates\n  useEffect(() => {\n    // \"set\" updates the first spring, the other springs are bound and will follow.\n    // It won't cause a new render pass and the animated values down in the view\n    // will still naturally reflect animated changes.\n    const handler = ({ clientX, clientY }) => set({ pos1: [clientX, clientY] })\n    window.addEventListener('mousemove', handler)\n    return () => window.removeEventListener('mousemove', handler)\n  }, [])\n  // We render the view like always, but we're using animated.el whereever\n  // animated values are being used. Just like with regular \"native\" springs this\n  // makes elements transient.\n  return (\n    <>\n      <svg style={{ position: 'absolute', width: 0, height: 0 }}>\n        <filter id=\"goo\">\n          <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"30\" />\n          <feColorMatrix in=\"blur\" values=\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 30 -7\" />\n        </filter>\n      </svg>\n      <div class=\"hooks-main\">\n        <div class=\"hooks-filter\">\n          <anim.div class=\"b1\" style={{ transform: pos3.interpolate(trans) }} />\n          <anim.div class=\"b2\" style={{ transform: pos2.interpolate(trans) }} />\n          <anim.div class=\"b3\" style={{ transform: pos1.interpolate(trans) }} />\n        </div>\n      </div>\n    </>\n  )\n}\n\nReactDOM.render(<Goo />, document.getElementById('root'))\n"],"sourceRoot":""}